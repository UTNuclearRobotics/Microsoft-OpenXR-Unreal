// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Microsoft_Azure_ObjectAnchors_0_H
#define WINRT_Microsoft_Azure_ObjectAnchors_0_H
WINRT_EXPORT namespace winrt::Microsoft::Azure::ObjectAnchors::SpatialGraph
{
    struct SpatialFieldOfView;
    struct SpatialGraphCoordinateSystem;
    struct SpatialGraphLocation;
    struct SpatialOrientedBox;
    struct SpatialPose;
    struct SpatialSphere;
}
WINRT_EXPORT namespace winrt::Windows::Foundation
{
    struct EventRegistrationToken;
    template <typename TResult> struct __declspec(empty_bases) IAsyncOperation;
    template <typename T> struct __declspec(empty_bases) IReference;
}
WINRT_EXPORT namespace winrt::Windows::Foundation::Collections
{
    template <typename T> struct __declspec(empty_bases) IVector;
}
WINRT_EXPORT namespace winrt::Windows::Foundation::Numerics
{
}
WINRT_EXPORT namespace winrt::Microsoft::Azure::ObjectAnchors
{
    enum class EnvironmentObservationTopology : int32_t
    {
        PointCloud = 0,
        TriangleList = 1,
    };
    enum class ObjectInstanceTrackingMode : int32_t
    {
        Paused = 0,
        LowLatencyCoarsePosition = 1,
        HighLatencyAccuratePosition = 2,
    };
    enum class ObjectObservationMode : int32_t
    {
        Ambient = 0,
        Active = 1,
    };
    enum class ObjectObserverAccessStatus : int32_t
    {
        Allowed = 0,
        DeniedBySystem = 1,
        DeniedByUser = 2,
        NotDeclaredByApp = 3,
        UserPromptRequired = 4,
    };
    struct IAccountInformation;
    struct IAccountInformationFactory;
    struct IEnvironmentObservation;
    struct IObjectAnchorsSession;
    struct IObjectAnchorsSessionFactory;
    struct IObjectInstance;
    struct IObjectInstanceChangedEventArgs;
    struct IObjectInstancePlacement;
    struct IObjectModel;
    struct IObjectObserver;
    struct IObjectObserverStatics;
    struct IObjectQuery;
    struct IObjectQueryFactory;
    struct IObjectSearchArea;
    struct IObjectSearchAreaStatics;
    struct AccountInformation;
    struct EnvironmentObservation;
    struct ObjectAnchorsSession;
    struct ObjectInstance;
    struct ObjectInstanceChangedEventArgs;
    struct ObjectInstancePlacement;
    struct ObjectModel;
    struct ObjectObserver;
    struct ObjectQuery;
    struct ObjectSearchArea;
    struct ObjectControlPoint;
    struct ObjectInstanceState;
    struct ObjectInstanceChangedHandler;
}
namespace winrt::impl
{
    template <> struct category<Microsoft::Azure::ObjectAnchors::IAccountInformation>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IAccountInformationFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IEnvironmentObservation>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSession>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSessionFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectInstance>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectInstanceChangedEventArgs>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectInstancePlacement>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectModel>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectObserver>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectObserverStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectQuery>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectQueryFactory>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectSearchArea>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::IObjectSearchAreaStatics>{ using type = interface_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::AccountInformation>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::EnvironmentObservation>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectAnchorsSession>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectInstance>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedEventArgs>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectInstancePlacement>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectModel>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectObserver>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectQuery>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectSearchArea>{ using type = class_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::EnvironmentObservationTopology>{ using type = enum_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectInstanceTrackingMode>{ using type = enum_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectObservationMode>{ using type = enum_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectObserverAccessStatus>{ using type = enum_category; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectControlPoint>{ using type = struct_category<Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialGraphLocation, Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialPose>; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectInstanceState>{ using type = struct_category<Windows::Foundation::DateTime, float, Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialGraphLocation, Windows::Foundation::Numerics::float3>; };
    template <> struct category<Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedHandler>{ using type = delegate_category; };
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::AccountInformation> = L"Microsoft.Azure.ObjectAnchors.AccountInformation";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::EnvironmentObservation> = L"Microsoft.Azure.ObjectAnchors.EnvironmentObservation";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectAnchorsSession> = L"Microsoft.Azure.ObjectAnchors.ObjectAnchorsSession";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectInstance> = L"Microsoft.Azure.ObjectAnchors.ObjectInstance";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedEventArgs> = L"Microsoft.Azure.ObjectAnchors.ObjectInstanceChangedEventArgs";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectInstancePlacement> = L"Microsoft.Azure.ObjectAnchors.ObjectInstancePlacement";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectModel> = L"Microsoft.Azure.ObjectAnchors.ObjectModel";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectObserver> = L"Microsoft.Azure.ObjectAnchors.ObjectObserver";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectQuery> = L"Microsoft.Azure.ObjectAnchors.ObjectQuery";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectSearchArea> = L"Microsoft.Azure.ObjectAnchors.ObjectSearchArea";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::EnvironmentObservationTopology> = L"Microsoft.Azure.ObjectAnchors.EnvironmentObservationTopology";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectInstanceTrackingMode> = L"Microsoft.Azure.ObjectAnchors.ObjectInstanceTrackingMode";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectObservationMode> = L"Microsoft.Azure.ObjectAnchors.ObjectObservationMode";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectObserverAccessStatus> = L"Microsoft.Azure.ObjectAnchors.ObjectObserverAccessStatus";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectControlPoint> = L"Microsoft.Azure.ObjectAnchors.ObjectControlPoint";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectInstanceState> = L"Microsoft.Azure.ObjectAnchors.ObjectInstanceState";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IAccountInformation> = L"Microsoft.Azure.ObjectAnchors.IAccountInformation";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IAccountInformationFactory> = L"Microsoft.Azure.ObjectAnchors.IAccountInformationFactory";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IEnvironmentObservation> = L"Microsoft.Azure.ObjectAnchors.IEnvironmentObservation";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSession> = L"Microsoft.Azure.ObjectAnchors.IObjectAnchorsSession";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSessionFactory> = L"Microsoft.Azure.ObjectAnchors.IObjectAnchorsSessionFactory";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectInstance> = L"Microsoft.Azure.ObjectAnchors.IObjectInstance";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectInstanceChangedEventArgs> = L"Microsoft.Azure.ObjectAnchors.IObjectInstanceChangedEventArgs";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectInstancePlacement> = L"Microsoft.Azure.ObjectAnchors.IObjectInstancePlacement";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectModel> = L"Microsoft.Azure.ObjectAnchors.IObjectModel";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectObserver> = L"Microsoft.Azure.ObjectAnchors.IObjectObserver";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectObserverStatics> = L"Microsoft.Azure.ObjectAnchors.IObjectObserverStatics";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectQuery> = L"Microsoft.Azure.ObjectAnchors.IObjectQuery";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectQueryFactory> = L"Microsoft.Azure.ObjectAnchors.IObjectQueryFactory";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectSearchArea> = L"Microsoft.Azure.ObjectAnchors.IObjectSearchArea";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::IObjectSearchAreaStatics> = L"Microsoft.Azure.ObjectAnchors.IObjectSearchAreaStatics";
    template <> inline constexpr auto& name_v<Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedHandler> = L"Microsoft.Azure.ObjectAnchors.ObjectInstanceChangedHandler";
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IAccountInformation>{ 0x78EE54E4,0xBB77,0x57A4,{ 0x82,0x03,0x1E,0x67,0x03,0x98,0x04,0xA9 } }; // 78EE54E4-BB77-57A4-8203-1E67039804A9
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IAccountInformationFactory>{ 0x8E5927BC,0xE166,0x5966,{ 0x93,0xD6,0xEB,0xF3,0x2F,0x97,0x01,0x6F } }; // 8E5927BC-E166-5966-93D6-EBF32F97016F
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IEnvironmentObservation>{ 0x27916E98,0x43D4,0x5B2F,{ 0x81,0x81,0xFF,0x58,0xBD,0xD5,0xFE,0x0E } }; // 27916E98-43D4-5B2F-8181-FF58BDD5FE0E
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSession>{ 0xEF159804,0x826B,0x5C43,{ 0x99,0x5E,0x60,0xFB,0xC0,0x8E,0x18,0x6A } }; // EF159804-826B-5C43-995E-60FBC08E186A
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSessionFactory>{ 0xA9F4554A,0x120E,0x5433,{ 0xAC,0xB8,0x16,0x89,0x80,0xD5,0xF9,0xF9 } }; // A9F4554A-120E-5433-ACB8-168980D5F9F9
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectInstance>{ 0x47DBD026,0x9AE8,0x5BC5,{ 0xBA,0x52,0x27,0x96,0x13,0x59,0xB0,0x78 } }; // 47DBD026-9AE8-5BC5-BA52-27961359B078
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectInstanceChangedEventArgs>{ 0x94542EA9,0xA4C4,0x5EDD,{ 0xBB,0x74,0xE3,0x95,0x25,0x64,0x4A,0xE4 } }; // 94542EA9-A4C4-5EDD-BB74-E39525644AE4
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectInstancePlacement>{ 0x5C707908,0x3A85,0x5AEC,{ 0x98,0x23,0x84,0x64,0x96,0x94,0x23,0x1A } }; // 5C707908-3A85-5AEC-9823-84649694231A
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectModel>{ 0xB184A8E1,0x1DB3,0x5ED1,{ 0x8F,0x6E,0x83,0x25,0x3D,0x17,0x92,0xF8 } }; // B184A8E1-1DB3-5ED1-8F6E-83253D1792F8
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectObserver>{ 0xAD62B9E8,0x9BAD,0x5607,{ 0x98,0x2B,0x0F,0xF3,0x78,0xAA,0x88,0xF2 } }; // AD62B9E8-9BAD-5607-982B-0FF378AA88F2
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectObserverStatics>{ 0x31604340,0xA328,0x5062,{ 0x92,0xD8,0xCE,0xEF,0x04,0x83,0x67,0x2C } }; // 31604340-A328-5062-92D8-CEEF0483672C
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectQuery>{ 0x29DFE30B,0x376C,0x56CB,{ 0xAE,0xD3,0xD0,0xC5,0x5B,0x8A,0x6F,0xAA } }; // 29DFE30B-376C-56CB-AED3-D0C55B8A6FAA
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectQueryFactory>{ 0x24F5AD64,0xC451,0x5511,{ 0xAB,0x2E,0x17,0xD0,0x0F,0xB6,0x14,0x89 } }; // 24F5AD64-C451-5511-AB2E-17D00FB61489
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectSearchArea>{ 0x3980792C,0xEC7E,0x5936,{ 0x82,0xF1,0x73,0xC2,0xD6,0xF4,0x8E,0xB1 } }; // 3980792C-EC7E-5936-82F1-73C2D6F48EB1
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::IObjectSearchAreaStatics>{ 0xA47688B6,0xB856,0x5DCF,{ 0xA0,0x9A,0xD3,0x63,0x03,0x4A,0xE5,0xDC } }; // A47688B6-B856-5DCF-A09A-D363034AE5DC
    template <> inline constexpr guid guid_v<Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedHandler>{ 0x8E894A95,0xE8F8,0x577F,{ 0xBE,0x98,0xAD,0x4B,0x38,0xBD,0xA6,0x98 } }; // 8E894A95-E8F8-577F-BE98-AD4B38BDA698
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::AccountInformation>{ using type = Microsoft::Azure::ObjectAnchors::IAccountInformation; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::EnvironmentObservation>{ using type = Microsoft::Azure::ObjectAnchors::IEnvironmentObservation; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::ObjectAnchorsSession>{ using type = Microsoft::Azure::ObjectAnchors::IObjectAnchorsSession; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::ObjectInstance>{ using type = Microsoft::Azure::ObjectAnchors::IObjectInstance; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedEventArgs>{ using type = Microsoft::Azure::ObjectAnchors::IObjectInstanceChangedEventArgs; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::ObjectInstancePlacement>{ using type = Microsoft::Azure::ObjectAnchors::IObjectInstancePlacement; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::ObjectModel>{ using type = Microsoft::Azure::ObjectAnchors::IObjectModel; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::ObjectObserver>{ using type = Microsoft::Azure::ObjectAnchors::IObjectObserver; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::ObjectQuery>{ using type = Microsoft::Azure::ObjectAnchors::IObjectQuery; };
    template <> struct default_interface<Microsoft::Azure::ObjectAnchors::ObjectSearchArea>{ using type = Microsoft::Azure::ObjectAnchors::IObjectSearchArea; };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IAccountInformation>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_AccountId(winrt::guid*) noexcept = 0;
            virtual int32_t __stdcall get_AccountDomain(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IAccountInformationFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(winrt::guid, void*, void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IEnvironmentObservation>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_LastUpdatedTime(int64_t*) noexcept = 0;
            virtual int32_t __stdcall get_Origin(struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialGraphLocation*) noexcept = 0;
            virtual int32_t __stdcall get_VertexCount(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall get_TriangleIndexCount(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall GetVertexPositions(uint32_t, Windows::Foundation::Numerics::float3*) noexcept = 0;
            virtual int32_t __stdcall GetVertexNormals(uint32_t, Windows::Foundation::Numerics::float3*) noexcept = 0;
            virtual int32_t __stdcall GetTriangleIndices(uint32_t, uint32_t*) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSession>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateObjectObserver(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSessionFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectInstance>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_ModelId(winrt::guid*) noexcept = 0;
            virtual int32_t __stdcall get_Mode(int32_t*) noexcept = 0;
            virtual int32_t __stdcall put_Mode(int32_t) noexcept = 0;
            virtual int32_t __stdcall add_Changed(void*, winrt::event_token*) noexcept = 0;
            virtual int32_t __stdcall remove_Changed(winrt::event_token) noexcept = 0;
            virtual int32_t __stdcall TryGetCurrentState(void**) noexcept = 0;
            virtual int32_t __stdcall TryGetCurrentPlacement(struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialGraphCoordinateSystem, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectInstanceChangedEventArgs>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectInstancePlacement>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_State(struct struct_Microsoft_Azure_ObjectAnchors_ObjectInstanceState*) noexcept = 0;
            virtual int32_t __stdcall ComputeModelPoseForView(struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialPose, Windows::Foundation::Numerics::float4x4, struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialPose*) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectModel>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_Id(winrt::guid*) noexcept = 0;
            virtual int32_t __stdcall get_BoundingBox(struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialOrientedBox*) noexcept = 0;
            virtual int32_t __stdcall get_OriginToCenterTransform(Windows::Foundation::Numerics::float4x4*) noexcept = 0;
            virtual int32_t __stdcall get_VertexCount(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall get_TriangleIndexCount(uint32_t*) noexcept = 0;
            virtual int32_t __stdcall GetVertexPositions(uint32_t, Windows::Foundation::Numerics::float3*) noexcept = 0;
            virtual int32_t __stdcall GetVertexNormals(uint32_t, Windows::Foundation::Numerics::float3*) noexcept = 0;
            virtual int32_t __stdcall GetTriangleIndices(uint32_t, uint32_t*) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectObserver>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall LoadObjectModelAsync(uint32_t, uint8_t*, void**) noexcept = 0;
            virtual int32_t __stdcall DetectAsync(void*, void**) noexcept = 0;
            virtual int32_t __stdcall DetectAsync2(uint32_t, void**, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectObserverStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall IsSupported(bool*) noexcept = 0;
            virtual int32_t __stdcall RequestAccessAsync(void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectQuery>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall get_MinSurfaceCoverage(float*) noexcept = 0;
            virtual int32_t __stdcall put_MinSurfaceCoverage(float) noexcept = 0;
            virtual int32_t __stdcall get_IsExpectedToBeStandingOnGroundPlane(bool*) noexcept = 0;
            virtual int32_t __stdcall put_IsExpectedToBeStandingOnGroundPlane(bool) noexcept = 0;
            virtual int32_t __stdcall get_ExpectedMaxVerticalOrientationInDegrees(float*) noexcept = 0;
            virtual int32_t __stdcall put_ExpectedMaxVerticalOrientationInDegrees(float) noexcept = 0;
            virtual int32_t __stdcall get_MaxScaleChange(float*) noexcept = 0;
            virtual int32_t __stdcall put_MaxScaleChange(float) noexcept = 0;
            virtual int32_t __stdcall get_SearchAreas(void**) noexcept = 0;
            virtual int32_t __stdcall ComputeLatestEnvironmentObservationAsync(void**) noexcept = 0;
            virtual int32_t __stdcall ComputeLatestEnvironmentObservationAsync2(int32_t, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectQueryFactory>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall CreateInstance(void*, void**) noexcept = 0;
            virtual int32_t __stdcall CreateInstance2(void*, int32_t, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectSearchArea>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::IObjectSearchAreaStatics>
    {
        struct __declspec(novtable) type : inspectable_abi
        {
            virtual int32_t __stdcall FromLocation(struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialGraphCoordinateSystem, Windows::Foundation::Numerics::float3, Windows::Foundation::Numerics::quaternion, void**) noexcept = 0;
            virtual int32_t __stdcall FromFieldOfView(struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialGraphCoordinateSystem, struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialFieldOfView, void**) noexcept = 0;
            virtual int32_t __stdcall FromOrientedBox(struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialGraphCoordinateSystem, struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialOrientedBox, void**) noexcept = 0;
            virtual int32_t __stdcall FromSphere(struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialGraphCoordinateSystem, struct struct_Microsoft_Azure_ObjectAnchors_SpatialGraph_SpatialSphere, void**) noexcept = 0;
        };
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedHandler>
    {
        struct __declspec(novtable) type : unknown_abi
        {
            virtual int32_t __stdcall Invoke(void*, void*) noexcept = 0;
        };
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IAccountInformation
    {
        [[nodiscard]] WINRT_IMPL_AUTO(winrt::guid) AccountId() const;
        [[nodiscard]] WINRT_IMPL_AUTO(hstring) AccountDomain() const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IAccountInformation>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IAccountInformation<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IAccountInformationFactory
    {
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::AccountInformation) CreateInstance(winrt::guid const& accountId, param::hstring const& accountKey, param::hstring const& accountDomain) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IAccountInformationFactory>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IAccountInformationFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IEnvironmentObservation
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::Foundation::DateTime) LastUpdatedTime() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialGraphLocation) Origin() const;
        [[nodiscard]] WINRT_IMPL_AUTO(uint32_t) VertexCount() const;
        [[nodiscard]] WINRT_IMPL_AUTO(uint32_t) TriangleIndexCount() const;
        WINRT_IMPL_AUTO(void) GetVertexPositions(array_view<Windows::Foundation::Numerics::float3> vertices) const;
        WINRT_IMPL_AUTO(void) GetVertexNormals(array_view<Windows::Foundation::Numerics::float3> normals) const;
        WINRT_IMPL_AUTO(void) GetTriangleIndices(array_view<uint32_t> indices) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IEnvironmentObservation>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IEnvironmentObservation<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectAnchorsSession
    {
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectObserver) CreateObjectObserver() const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSession>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectAnchorsSession<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectAnchorsSessionFactory
    {
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectAnchorsSession) CreateInstance(Microsoft::Azure::ObjectAnchors::AccountInformation const& accountInformation) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectAnchorsSessionFactory>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectAnchorsSessionFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectInstance
    {
        [[nodiscard]] WINRT_IMPL_AUTO(winrt::guid) ModelId() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectInstanceTrackingMode) Mode() const;
        WINRT_IMPL_AUTO(void) Mode(Microsoft::Azure::ObjectAnchors::ObjectInstanceTrackingMode const& value) const;
        WINRT_IMPL_AUTO(winrt::event_token) Changed(Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedHandler const& handler) const;
        using Changed_revoker = impl::event_revoker<Microsoft::Azure::ObjectAnchors::IObjectInstance, &impl::abi_t<Microsoft::Azure::ObjectAnchors::IObjectInstance>::remove_Changed>;
        [[nodiscard]] Changed_revoker Changed(auto_revoke_t, Microsoft::Azure::ObjectAnchors::ObjectInstanceChangedHandler const& handler) const;
        WINRT_IMPL_AUTO(void) Changed(winrt::event_token const& token) const noexcept;
        WINRT_IMPL_AUTO(Windows::Foundation::IReference<Microsoft::Azure::ObjectAnchors::ObjectInstanceState>) TryGetCurrentState() const;
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectInstancePlacement) TryGetCurrentPlacement(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialGraphCoordinateSystem const& referenceCoordinateSystem) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectInstance>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectInstance<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectInstanceChangedEventArgs
    {
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectInstanceChangedEventArgs>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectInstanceChangedEventArgs<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectInstancePlacement
    {
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectInstanceState) State() const;
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialPose) ComputeModelPoseForView(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialPose const& viewInWorld, Windows::Foundation::Numerics::float4x4 const& worldToReference) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectInstancePlacement>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectInstancePlacement<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectModel
    {
        [[nodiscard]] WINRT_IMPL_AUTO(winrt::guid) Id() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialOrientedBox) BoundingBox() const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::Foundation::Numerics::float4x4) OriginToCenterTransform() const;
        [[nodiscard]] WINRT_IMPL_AUTO(uint32_t) VertexCount() const;
        [[nodiscard]] WINRT_IMPL_AUTO(uint32_t) TriangleIndexCount() const;
        WINRT_IMPL_AUTO(void) GetVertexPositions(array_view<Windows::Foundation::Numerics::float3> vertices) const;
        WINRT_IMPL_AUTO(void) GetVertexNormals(array_view<Windows::Foundation::Numerics::float3> normals) const;
        WINRT_IMPL_AUTO(void) GetTriangleIndices(array_view<uint32_t> indices) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectModel>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectModel<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectObserver
    {
        WINRT_IMPL_AUTO(Windows::Foundation::IAsyncOperation<Microsoft::Azure::ObjectAnchors::ObjectModel>) LoadObjectModelAsync(array_view<uint8_t const> buffer) const;
        WINRT_IMPL_AUTO(Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<Microsoft::Azure::ObjectAnchors::ObjectInstance>>) DetectAsync(Microsoft::Azure::ObjectAnchors::ObjectQuery const& query) const;
        WINRT_IMPL_AUTO(Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<Microsoft::Azure::ObjectAnchors::ObjectInstance>>) DetectAsync(array_view<Microsoft::Azure::ObjectAnchors::ObjectQuery const> queries) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectObserver>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectObserver<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectObserverStatics
    {
        WINRT_IMPL_AUTO(bool) IsSupported() const;
        WINRT_IMPL_AUTO(Windows::Foundation::IAsyncOperation<Microsoft::Azure::ObjectAnchors::ObjectObserverAccessStatus>) RequestAccessAsync() const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectObserverStatics>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectObserverStatics<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectQuery
    {
        [[nodiscard]] WINRT_IMPL_AUTO(float) MinSurfaceCoverage() const;
        WINRT_IMPL_AUTO(void) MinSurfaceCoverage(float value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(bool) IsExpectedToBeStandingOnGroundPlane() const;
        WINRT_IMPL_AUTO(void) IsExpectedToBeStandingOnGroundPlane(bool value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(float) ExpectedMaxVerticalOrientationInDegrees() const;
        WINRT_IMPL_AUTO(void) ExpectedMaxVerticalOrientationInDegrees(float value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(float) MaxScaleChange() const;
        WINRT_IMPL_AUTO(void) MaxScaleChange(float value) const;
        [[nodiscard]] WINRT_IMPL_AUTO(Windows::Foundation::Collections::IVector<Microsoft::Azure::ObjectAnchors::ObjectSearchArea>) SearchAreas() const;
        WINRT_IMPL_AUTO(Windows::Foundation::IAsyncOperation<Microsoft::Azure::ObjectAnchors::EnvironmentObservation>) ComputeLatestEnvironmentObservationAsync() const;
        WINRT_IMPL_AUTO(Windows::Foundation::IAsyncOperation<Microsoft::Azure::ObjectAnchors::EnvironmentObservation>) ComputeLatestEnvironmentObservationAsync(Microsoft::Azure::ObjectAnchors::EnvironmentObservationTopology const& topology) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectQuery>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectQuery<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectQueryFactory
    {
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectQuery) CreateInstance(Microsoft::Azure::ObjectAnchors::ObjectModel const& model) const;
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectQuery) CreateInstance2(Microsoft::Azure::ObjectAnchors::ObjectModel const& model, Microsoft::Azure::ObjectAnchors::ObjectObservationMode const& observationMode) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectQueryFactory>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectQueryFactory<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectSearchArea
    {
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectSearchArea>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectSearchArea<D>;
    };
    template <typename D>
    struct consume_Microsoft_Azure_ObjectAnchors_IObjectSearchAreaStatics
    {
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectSearchArea) FromLocation(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialGraphCoordinateSystem const& coordinateSystem, Windows::Foundation::Numerics::float3 const& position, Windows::Foundation::Numerics::quaternion const& orientation) const;
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectSearchArea) FromFieldOfView(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialGraphCoordinateSystem const& coordinateSystem, Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialFieldOfView const& fieldOfView) const;
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectSearchArea) FromOrientedBox(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialGraphCoordinateSystem const& coordinateSystem, Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialOrientedBox const& bounds) const;
        WINRT_IMPL_AUTO(Microsoft::Azure::ObjectAnchors::ObjectSearchArea) FromSphere(Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialGraphCoordinateSystem const& coordinateSystem, Microsoft::Azure::ObjectAnchors::SpatialGraph::SpatialSphere const& sphere) const;
    };
    template <> struct consume<Microsoft::Azure::ObjectAnchors::IObjectSearchAreaStatics>
    {
        template <typename D> using type = consume_Microsoft_Azure_ObjectAnchors_IObjectSearchAreaStatics<D>;
    };
    struct struct_Microsoft_Azure_ObjectAnchors_ObjectControlPoint
    {
        struct{ winrt::guid NodeId; Windows::Foundation::Numerics::float3 Position; Windows::Foundation::Numerics::quaternion Orientation; } Location;
        struct{ Windows::Foundation::Numerics::float3 Position; Windows::Foundation::Numerics::quaternion Orientation; } ModelCoordinate;
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::ObjectControlPoint>
    {
        using type = struct_Microsoft_Azure_ObjectAnchors_ObjectControlPoint;
    };
    struct struct_Microsoft_Azure_ObjectAnchors_ObjectInstanceState
    {
        int64_t LastUpdatedTime;
        float SurfaceCoverage;
        struct{ winrt::guid NodeId; Windows::Foundation::Numerics::float3 Position; Windows::Foundation::Numerics::quaternion Orientation; } Center;
        Windows::Foundation::Numerics::float3 ScaleChange;
    };
    template <> struct abi<Microsoft::Azure::ObjectAnchors::ObjectInstanceState>
    {
        using type = struct_Microsoft_Azure_ObjectAnchors_ObjectInstanceState;
    };
}
#endif
