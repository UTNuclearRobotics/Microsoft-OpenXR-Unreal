// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Microsoft_Azure_ObjectAnchors_Diagnostics_1_H
#define WINRT_Microsoft_Azure_ObjectAnchors_Diagnostics_1_H
#include "winrt/impl/Microsoft.Azure.ObjectAnchors.Diagnostics.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Azure::ObjectAnchors::Diagnostics
{
    struct __declspec(empty_bases) IObjectDiagnosticsSession :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectDiagnosticsSession>
    {
        IObjectDiagnosticsSession(std::nullptr_t = nullptr) noexcept {}
        IObjectDiagnosticsSession(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectDiagnosticsSession(IObjectDiagnosticsSession const&) noexcept = default;
        IObjectDiagnosticsSession(IObjectDiagnosticsSession&&) noexcept = default;
        IObjectDiagnosticsSession& operator=(IObjectDiagnosticsSession const&) & noexcept = default;
        IObjectDiagnosticsSession& operator=(IObjectDiagnosticsSession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectDiagnosticsSessionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectDiagnosticsSessionFactory>
    {
        IObjectDiagnosticsSessionFactory(std::nullptr_t = nullptr) noexcept {}
        IObjectDiagnosticsSessionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectDiagnosticsSessionFactory(IObjectDiagnosticsSessionFactory const&) noexcept = default;
        IObjectDiagnosticsSessionFactory(IObjectDiagnosticsSessionFactory&&) noexcept = default;
        IObjectDiagnosticsSessionFactory& operator=(IObjectDiagnosticsSessionFactory const&) & noexcept = default;
        IObjectDiagnosticsSessionFactory& operator=(IObjectDiagnosticsSessionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectDiagnosticsSessionStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectDiagnosticsSessionStatics>
    {
        IObjectDiagnosticsSessionStatics(std::nullptr_t = nullptr) noexcept {}
        IObjectDiagnosticsSessionStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectDiagnosticsSessionStatics(IObjectDiagnosticsSessionStatics const&) noexcept = default;
        IObjectDiagnosticsSessionStatics(IObjectDiagnosticsSessionStatics&&) noexcept = default;
        IObjectDiagnosticsSessionStatics& operator=(IObjectDiagnosticsSessionStatics const&) & noexcept = default;
        IObjectDiagnosticsSessionStatics& operator=(IObjectDiagnosticsSessionStatics&&) & noexcept = default;
    };
}
#endif
