// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Microsoft_Azure_ObjectAnchors_Diagnostics_2_H
#define WINRT_Microsoft_Azure_ObjectAnchors_Diagnostics_2_H
#include "winrt/impl/Microsoft.Azure.ObjectAnchors.1.h"
#include "winrt/impl/Microsoft.Azure.ObjectAnchors.Diagnostics.1.h"
WINRT_EXPORT namespace winrt::Microsoft::Azure::ObjectAnchors::Diagnostics
{
    struct __declspec(empty_bases) ObjectDiagnosticsSession : Microsoft::Azure::ObjectAnchors::Diagnostics::IObjectDiagnosticsSession
    {
        ObjectDiagnosticsSession(std::nullptr_t) noexcept {}
        ObjectDiagnosticsSession(void* ptr, take_ownership_from_abi_t) noexcept : Microsoft::Azure::ObjectAnchors::Diagnostics::IObjectDiagnosticsSession(ptr, take_ownership_from_abi) {}
        ObjectDiagnosticsSession(Microsoft::Azure::ObjectAnchors::ObjectObserver const& observer, uint32_t maxSessionSizeInMegaBytes);
        ObjectDiagnosticsSession(ObjectDiagnosticsSession const&) noexcept = default;
        ObjectDiagnosticsSession(ObjectDiagnosticsSession&&) noexcept = default;
        ObjectDiagnosticsSession& operator=(ObjectDiagnosticsSession const&) & noexcept = default;
        ObjectDiagnosticsSession& operator=(ObjectDiagnosticsSession&&) & noexcept = default;
        static auto UploadDiagnosticsAsync(param::hstring const& diagnosticsFilePath, Microsoft::Azure::ObjectAnchors::ObjectAnchorsSession const& objectAnchorsSession);
    };
}
#endif
