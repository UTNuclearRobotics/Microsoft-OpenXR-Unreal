// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.201217.4

#ifndef WINRT_Microsoft_Azure_ObjectAnchors_1_H
#define WINRT_Microsoft_Azure_ObjectAnchors_1_H
#include "winrt/impl/Microsoft.Azure.ObjectAnchors.0.h"
WINRT_EXPORT namespace winrt::Microsoft::Azure::ObjectAnchors
{
    struct __declspec(empty_bases) IAccountInformation :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAccountInformation>
    {
        IAccountInformation(std::nullptr_t = nullptr) noexcept {}
        IAccountInformation(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccountInformation(IAccountInformation const&) noexcept = default;
        IAccountInformation(IAccountInformation&&) noexcept = default;
        IAccountInformation& operator=(IAccountInformation const&) & noexcept = default;
        IAccountInformation& operator=(IAccountInformation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IAccountInformationFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IAccountInformationFactory>
    {
        IAccountInformationFactory(std::nullptr_t = nullptr) noexcept {}
        IAccountInformationFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IAccountInformationFactory(IAccountInformationFactory const&) noexcept = default;
        IAccountInformationFactory(IAccountInformationFactory&&) noexcept = default;
        IAccountInformationFactory& operator=(IAccountInformationFactory const&) & noexcept = default;
        IAccountInformationFactory& operator=(IAccountInformationFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IEnvironmentObservation :
        Windows::Foundation::IInspectable,
        impl::consume_t<IEnvironmentObservation>
    {
        IEnvironmentObservation(std::nullptr_t = nullptr) noexcept {}
        IEnvironmentObservation(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IEnvironmentObservation(IEnvironmentObservation const&) noexcept = default;
        IEnvironmentObservation(IEnvironmentObservation&&) noexcept = default;
        IEnvironmentObservation& operator=(IEnvironmentObservation const&) & noexcept = default;
        IEnvironmentObservation& operator=(IEnvironmentObservation&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectAnchorsSession :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectAnchorsSession>
    {
        IObjectAnchorsSession(std::nullptr_t = nullptr) noexcept {}
        IObjectAnchorsSession(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectAnchorsSession(IObjectAnchorsSession const&) noexcept = default;
        IObjectAnchorsSession(IObjectAnchorsSession&&) noexcept = default;
        IObjectAnchorsSession& operator=(IObjectAnchorsSession const&) & noexcept = default;
        IObjectAnchorsSession& operator=(IObjectAnchorsSession&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectAnchorsSessionFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectAnchorsSessionFactory>
    {
        IObjectAnchorsSessionFactory(std::nullptr_t = nullptr) noexcept {}
        IObjectAnchorsSessionFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectAnchorsSessionFactory(IObjectAnchorsSessionFactory const&) noexcept = default;
        IObjectAnchorsSessionFactory(IObjectAnchorsSessionFactory&&) noexcept = default;
        IObjectAnchorsSessionFactory& operator=(IObjectAnchorsSessionFactory const&) & noexcept = default;
        IObjectAnchorsSessionFactory& operator=(IObjectAnchorsSessionFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectInstance :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectInstance>
    {
        IObjectInstance(std::nullptr_t = nullptr) noexcept {}
        IObjectInstance(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectInstance(IObjectInstance const&) noexcept = default;
        IObjectInstance(IObjectInstance&&) noexcept = default;
        IObjectInstance& operator=(IObjectInstance const&) & noexcept = default;
        IObjectInstance& operator=(IObjectInstance&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectInstanceChangedEventArgs :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectInstanceChangedEventArgs>
    {
        IObjectInstanceChangedEventArgs(std::nullptr_t = nullptr) noexcept {}
        IObjectInstanceChangedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectInstanceChangedEventArgs(IObjectInstanceChangedEventArgs const&) noexcept = default;
        IObjectInstanceChangedEventArgs(IObjectInstanceChangedEventArgs&&) noexcept = default;
        IObjectInstanceChangedEventArgs& operator=(IObjectInstanceChangedEventArgs const&) & noexcept = default;
        IObjectInstanceChangedEventArgs& operator=(IObjectInstanceChangedEventArgs&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectInstancePlacement :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectInstancePlacement>
    {
        IObjectInstancePlacement(std::nullptr_t = nullptr) noexcept {}
        IObjectInstancePlacement(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectInstancePlacement(IObjectInstancePlacement const&) noexcept = default;
        IObjectInstancePlacement(IObjectInstancePlacement&&) noexcept = default;
        IObjectInstancePlacement& operator=(IObjectInstancePlacement const&) & noexcept = default;
        IObjectInstancePlacement& operator=(IObjectInstancePlacement&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectModel :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectModel>
    {
        IObjectModel(std::nullptr_t = nullptr) noexcept {}
        IObjectModel(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectModel(IObjectModel const&) noexcept = default;
        IObjectModel(IObjectModel&&) noexcept = default;
        IObjectModel& operator=(IObjectModel const&) & noexcept = default;
        IObjectModel& operator=(IObjectModel&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectObserver :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectObserver>
    {
        IObjectObserver(std::nullptr_t = nullptr) noexcept {}
        IObjectObserver(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectObserver(IObjectObserver const&) noexcept = default;
        IObjectObserver(IObjectObserver&&) noexcept = default;
        IObjectObserver& operator=(IObjectObserver const&) & noexcept = default;
        IObjectObserver& operator=(IObjectObserver&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectObserverStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectObserverStatics>
    {
        IObjectObserverStatics(std::nullptr_t = nullptr) noexcept {}
        IObjectObserverStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectObserverStatics(IObjectObserverStatics const&) noexcept = default;
        IObjectObserverStatics(IObjectObserverStatics&&) noexcept = default;
        IObjectObserverStatics& operator=(IObjectObserverStatics const&) & noexcept = default;
        IObjectObserverStatics& operator=(IObjectObserverStatics&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectQuery :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectQuery>
    {
        IObjectQuery(std::nullptr_t = nullptr) noexcept {}
        IObjectQuery(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectQuery(IObjectQuery const&) noexcept = default;
        IObjectQuery(IObjectQuery&&) noexcept = default;
        IObjectQuery& operator=(IObjectQuery const&) & noexcept = default;
        IObjectQuery& operator=(IObjectQuery&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectQueryFactory :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectQueryFactory>
    {
        IObjectQueryFactory(std::nullptr_t = nullptr) noexcept {}
        IObjectQueryFactory(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectQueryFactory(IObjectQueryFactory const&) noexcept = default;
        IObjectQueryFactory(IObjectQueryFactory&&) noexcept = default;
        IObjectQueryFactory& operator=(IObjectQueryFactory const&) & noexcept = default;
        IObjectQueryFactory& operator=(IObjectQueryFactory&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectSearchArea :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectSearchArea>
    {
        IObjectSearchArea(std::nullptr_t = nullptr) noexcept {}
        IObjectSearchArea(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectSearchArea(IObjectSearchArea const&) noexcept = default;
        IObjectSearchArea(IObjectSearchArea&&) noexcept = default;
        IObjectSearchArea& operator=(IObjectSearchArea const&) & noexcept = default;
        IObjectSearchArea& operator=(IObjectSearchArea&&) & noexcept = default;
    };
    struct __declspec(empty_bases) IObjectSearchAreaStatics :
        Windows::Foundation::IInspectable,
        impl::consume_t<IObjectSearchAreaStatics>
    {
        IObjectSearchAreaStatics(std::nullptr_t = nullptr) noexcept {}
        IObjectSearchAreaStatics(void* ptr, take_ownership_from_abi_t) noexcept : Windows::Foundation::IInspectable(ptr, take_ownership_from_abi) {}
        IObjectSearchAreaStatics(IObjectSearchAreaStatics const&) noexcept = default;
        IObjectSearchAreaStatics(IObjectSearchAreaStatics&&) noexcept = default;
        IObjectSearchAreaStatics& operator=(IObjectSearchAreaStatics const&) & noexcept = default;
        IObjectSearchAreaStatics& operator=(IObjectSearchAreaStatics&&) & noexcept = default;
    };
}
#endif
